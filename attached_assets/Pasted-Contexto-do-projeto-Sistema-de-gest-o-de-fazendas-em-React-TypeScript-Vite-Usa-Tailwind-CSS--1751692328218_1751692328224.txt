Contexto do projeto:
Sistema de gest√£o de fazendas em React + TypeScript + Vite.

Usa Tailwind CSS, Radix UI, React Hook Form + Zod, React Query, Wouter.

Backend em Node.js + Express + PostgreSQL usando Drizzle ORM, autentica√ß√£o com passport + express-session, session store com connect-pg-simple.

A p√°gina animals-new exibe dados detalhados dos animais de uma fazenda, com cadastro e listagem.

‚úÖ Objetivo:
Implementar um m√≥dulo completo de controle de vacina√ß√µes dos animais na p√°gina animals-new.

üìå Funcionalidade a ser criada:
1Ô∏è‚É£ CRUD de Vacina√ß√µes
Criar uma aba ou se√ß√£o ‚ÄúVacina√ß√µes‚Äù dentro da visualiza√ß√£o do animal selecionado.

Permitir cadastrar novas vacina√ß√µes com os campos:

Nome da Vacina

Data da Aplica√ß√£o

Data da Pr√≥xima Dose

Veterin√°rio Respons√°vel

Observa√ß√µes

Mostrar tabela listando as vacina√ß√µes do animal, exibindo:

Nome da Vacina

Data da Aplica√ß√£o

Pr√≥xima Dose

Veterin√°rio

Observa√ß√µes

Permitir editar ou excluir vacina√ß√µes via modal ou inline editing.

2Ô∏è‚É£ Tecnologias e pr√°ticas a utilizar:
‚úÖ Frontend:

React + TypeScript

Tailwind CSS para layout responsivo.

Radix UI Modal/Popover caso necess√°rio.

React Hook Form + Zod para valida√ß√£o de formul√°rio de vacina√ß√£o.

React Query para cache e refetch autom√°tico ao adicionar/editar/excluir vacina√ß√µes.

Adicionar loading states e toast de sucesso/erro.

‚úÖ Backend:

Criar rota GET /animals/:animalId/vaccinations para listar vacina√ß√µes.

Criar rota POST /animals/:animalId/vaccinations para criar vacina√ß√£o.

Criar rota PUT /vaccinations/:vaccinationId para editar vacina√ß√£o.

Criar rota DELETE /vaccinations/:vaccinationId para excluir vacina√ß√£o.

Utilizar Drizzle ORM com PostgreSQL.

Validar os dados no backend.

‚úÖ Banco de Dados:
Criar tabela vaccinations:

sql
Copiar
Editar
id UUID PK
animal_id UUID FK
vaccine_name TEXT
application_date DATE
next_dose_date DATE
veterinarian TEXT
notes TEXT
created_at TIMESTAMP DEFAULT now()
updated_at TIMESTAMP DEFAULT now()
3Ô∏è‚É£ UX desejada:
‚úÖ Tela limpa, moderna e responsiva, sem poluir a visualiza√ß√£o principal do animal.
‚úÖ Usu√°rio consegue visualizar rapidamente as √∫ltimas vacina√ß√µes e acessar hist√≥rico completo.
‚úÖ Cadastro r√°pido e f√°cil de nova vacina√ß√£o.
‚úÖ Possibilidade de edi√ß√£o e exclus√£o para corre√ß√£o de dados.
‚úÖ Alertas visuais para pr√≥ximas doses se a data estiver pr√≥xima (opcional, se desejar).

üö¶ Crit√©rios de aceita√ß√£o:
‚úÖ C√≥digo consistente, sem erros de tipagem TypeScript.
‚úÖ Visual integrado ao padr√£o atual do Lagris.
‚úÖ Funcionalidade funcionando de ponta a ponta (frontend + backend).
‚úÖ Compat√≠vel com o controle de autentica√ß√£o e fazendas j√° existentes.
‚úÖ Performance otimizada com React Query para cache e refetch.
‚úÖ Usu√°rio consegue gerenciar facilmente as vacina√ß√µes de cada animal.

Quando terminar, avise para revis√£o e poss√≠veis incrementos como:

Gera√ß√£o de relat√≥rios de vacina√ß√µes por fazenda.

Alertas autom√°ticos para doses pr√≥ximas.

Integra√ß√£o com notifica√ß√µes no painel.
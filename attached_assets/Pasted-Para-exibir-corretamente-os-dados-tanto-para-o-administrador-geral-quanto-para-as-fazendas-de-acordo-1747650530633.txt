Para exibir corretamente os dados tanto para o administrador geral quanto para as fazendas de acordo com seus dados, você pode implementar condicionais que verifiquem o papel do usuário. Assim, você pode carregar e exibir os dados apropriados com base no acesso do usuário.

Exemplo de Implementação
Na sua página de relatórios, você pode modificar o código para verificar o papel do usuário e filtrar os dados conforme necessário. Aqui está um exemplo de como você poderia fazer isso:

import React, { useState } from 'react';
import { useQuery } from '@tanstack/react-query';
import { DashboardLayout } from '@/components/layout/DashboardLayout';
import { Select, Button } from '@/components/ui/select';
import { useAuth } from '@/hooks/use-auth';
export default function Reports() {
  const { user } = useAuth();
  const [farmId, setFarmId] = useState<string | null>(null);
  
  // Carregar dados de fazendas
  const { data: farms = [] } = useQuery({
    queryKey: ['/api/farms'],
  });
  
  // Carregar dados de relatórios
  const { data: reports = [] } = useQuery({
    queryKey: ['/api/reports', farmId],
    enabled: !!farmId || user?.role === 'super_admin', // Carregar dados se farmId estiver definido ou se for um admin
  });
  return (
    <DashboardLayout>
      <h1>Relatórios</h1>
      {user?.role === 'super_admin' && (
        <Select value={farmId || ''} onValueChange={(value) => setFarmId(value || null)}>
          <option value="">Selecione uma fazenda</option>
          {farms.map(farm => (
            <option key={farm.id} value={farm.id.toString()}>{farm.name}</option>
          ))}
        </Select>
      )}
      <Button onClick={/* Lógica para baixar relatórios */}>
        Baixar Relatório
      </Button>
      
      {/* Exibir relatórios */}
      {reports && reports.length > 0 ? (
        <div>
          {reports.map(report => (
            <div key={report.id}>{report.title}</div>
          ))}
        </div>
      ) : (
        <p>Nenhum relatório disponível.</p>
      )}
    </DashboardLayout>
  );
}
Explicação
Verificação de Papel: O código agora usa user?.role para determinar se um usuário é super_admin. Se for, ele pode selecionar a fazenda e carregar os dados relevantes.

Dados de Relatórios: Os dados dos relatórios são carregados dependendo do farmId ou se o usuário for um administrador geral. Assim, se o usuário for um admin, os relatórios de todas as fazendas podem ser acessados.

Renderização Condicional: A lógica para a exibição dos relatórios é baseada na presença de dados. Se não houver relatórios, uma mensagem será exibida.